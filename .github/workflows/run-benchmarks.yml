name: Run Benchmarks

on:
  issue_comment:
    types: [created]

jobs:
  check-permission:
    runs-on: ubuntu-latest
    if: >
      github.event.issue.pull_request &&
      startsWith(github.event.comment.body, 'run benchmarks') &&
      (github.event.comment.author_association == 'OWNER' ||
      github.event.comment.author_association == 'MEMBER')
    #   member might not be admin with write permissions!!?
    steps:
      - name: Print event payload
        run: cat $GITHUB_EVENT_PATH

      - name: Check user's permission level
        id: check
        uses: actions/github-script@v6
        with:
          script: |
            const username = context.payload.comment.user.login;
            const { data } = await github.rest.repos.getCollaboratorPermissionLevel({
              owner: context.repo.owner,
              repo: context.repo.repo,
              username: username,
            });
            const perm = data.permission;
            console.log(`User ${username} has permission: ${perm}`);
            // Fail the job if the permission is not admin or write
            if (perm !== 'admin' && perm !== 'write') {
              throw new Error(`User does not have sufficient permissions. Found: ${perm}`);
            }
            return perm;
          result-encoding: string

  run-benchmarks:
    needs: check-permission
    runs-on: ubuntu-latest
    permissions:
        issues: write
    steps:
      - name: Benchmarks Started Comment
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            // Retrieve the comment ID and original comment body from the event payload
            const commentId = context.payload.comment.id;
            const originalBody = context.payload.comment.body;
            // Append a message to indicate benchmarks have started running
            const newBody = `${originalBody}\n\nðŸš€ Benchmarks have started running...`;
            // Update the comment with the new body text
            await github.rest.issues.updateComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: commentId,
              body: newBody,
            });

      - name: Fetch PR Details
        id: pr_info
        uses: actions/github-script@v7
        with:
            script: |
              const pr = await github.rest.pulls.get({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: context.issue.number
              });
              core.setOutput('head', pr.data.head.ref)
              core.setOutput('base', pr.data.base.ref)

    #   - name: Set branch variables and generate benchmark_info.json
    #     run: |
    #       set -e
    #       BASE_BRANCH="${{ steps.pr_info.outputs.base }}"
    #       HEAD_BRANCH="${{ steps.pr_info.outputs.head }}"
    #       PR_NUMBER="${{ github.event.issue.number }}"
    #             fi
    #             echo "BASE_BRANCH=$BASE_BRANCH" >> $GITHUB_ENV
    #             echo "HEAD_BRANCH=$HEAD_BRANCH" >> $GITHUB_ENV
    #             echo "PR_NUMBER=$PR_NUMBER" >> $GITHUB_ENV
