name: Receive Benchmark

on:
  pull_request:
    types: [opened]
  issue_comment:
    types: [created]

jobs:
  run-benchmarks:
    runs-on: ubuntu-latest
    permissions:
      checks: write
    if: >
      (github.event_name == 'pull_request' && github.event.pull_request.draft == false) ||
      (github.event_name == 'issue_comment' &&
      startsWith(github.event.comment.body, 'run benchmarks') &&
      github.event.issue.pull_request)

    steps:
      - name: Create Benchmark Check Run (In Progress)
        if: github.event_name == 'issue_comment'
        id: create_check_run
        uses: actions/github-script@v7
        with:
          # head_sha is currently on last commit of the pr branch, NOT the last commit of the merged temporary commit, is this okay??
          script: |
            const checkRun = await github.rest.checks.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: 'Benchmark Run',
              head_sha: context.sha,
              status: 'in_progress',
              started_at: new Dat().toISOString(),
              output: {
                title:'Benchmark Run Started',
                summary: 'Benchmarks are running...'
              }
            });
            core.setOutput('check_run_id', checkRun.data.id);
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Debug PR Event Info
        if: github.event_name == 'pull_request'
        run: |
          echo "Pull Request Event:"
          echo "  Base branch: ${{ github.event.pull_request.base.ref }}"
          echo "  Head branch: ${{ github.event.pull_request.head.ref }}"
          echo "  PR number: ${{ github.event.pull_request.number }}"
          echo "  Head commit SHA: ${{ github.event.pull_request.head.sha }}"
          echo "  Head repo full name: ${{ github.event.pull_request.head.repo.full_name }}"

      # Fetch PR details when triggered by an issue comment (not available in the event payload)
      - name: Fetch PR Details
        id: pr_info
        if: github.event_name == 'issue_comment'
        # action allows you to interact w/github api directly w/in workflow
        uses: actions/github-script@v7
        with:
          script: |
            const pr = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            });
            core.setOutput('head', pr.data.head.ref)
            core.setOutput('base', pr.data.base.ref)
            core.setOutput('number', pr.data.number)
            core.setOutput('head_repo', pr.data.head.repo.full_name)

      - name: Set branch variables
        run: |
          set -e
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            echo "BASE_BRANCH=${{ github.event.pull_request.base.ref }}" >> $GITHUB_ENV
            echo "HEAD_BRANCH=${{ github.event.pull_request.head.ref }}" >> $GITHUB_ENV
            echo "PR_NUMBER=${{ github.event.pull_request.number }}" >> $GITHUB_ENV
            echo "${{ github.event.pull_request.number }}" > pr_number.txt
            echo "BASE_BRANCH=${{ github.event.pull_request.base.ref }}" > branch_info.txt
            echo "HEAD_BRANCH=${{ github.event.pull_request.head.ref }}" >> branch_info.txt
          else
            echo "BASE_BRANCH=${{ steps.pr_info.outputs.base }}" >> $GITHUB_ENV
            echo "HEAD_BRANCH=${{ steps.pr_info.outputs.head }}" >> $GITHUB_ENV
            echo "PR_NUMBER=${{ steps.pr_info.outputs.number }}" >> $GITHUB_ENV
            echo "${{ steps.pr_info.outputs.number }}" > pr_number.txt
            echo "BASE_BRANCH=${{ steps.pr_info.outputs.base }}" > branch_info.txt
            echo "HEAD_BRANCH=${{ steps.pr_info.outputs.head }}" >> branch_info.txt
          fi

      - name: Debug environment variables
        run: |
          echo "BASE_BRANCH=$BASE_BRANCH"
          echo "HEAD_BRANCH=$HEAD_BRANCH"
          echo "PR_NUMBER:"
          cat pr_number.txt
          echo "Branch info:"
          cat branch_info.txt

      # Checkout the base (target) branch into a folder called "base"
      # (temp directories, only exist for duration of workflow run)
      - name: Checkout base branch
        uses: actions/checkout@v4
        with:
          ref: ${{ env.BASE_BRANCH }}
          path: base

      # Checkout the MERGED PR branch into a folder called "head"
      - name: Checkout head branch (merged)
        uses: actions/checkout@v4
        with:
          # this branch has everything on target branch at time event triggered with pr branch merged in
          ref: refs/pull/${{ env.PR_NUMBER }}/merge
          path: head

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install pyperf
        run: |
          python -m pip install --upgrade pip
          pip install pyperf

      # should run benchmarks simulataneously?
      # Run the benchmark on the base branch.
      # these output files stored temporarily in the runner's workspace during the job's execution.
      # Once the job completes, the files are removed.
      - name: Run benchmark on base branch
        working-directory: base
        run: python benchmarks.py -o ../results-base.json

      # Run the benchmark on the head branch.
      - name: Run benchmark on head branch
        working-directory: head
        run: python benchmarks.py -o ../results-head.json

      # Compare the two benchmark result files and save the output in Markdown format.
      - name: Compare benchmarks
        run: python -m pyperf compare_to results-base.json results-head.json --table --table-format=md > comparison.txt

      # Save the check run ID for use in the comment workflow.
      - name: Save Check Run ID
        if: github.event_name == 'issue_comment'
        run: echo "${{ steps.create_check_run.outputs.check_run_id }}" > check_run_id.txt

      - name: Upload benchmark artifact
        uses: actions/upload-artifact@v4
        with:
          name: benchmark-results
          path: |
            comparison.txt
            pr_number.txt
            branch_info.txt

      - name: Upload check run ID artifact
        if: ${{ github.event_name == 'issue_comment' }}
        uses: actions/upload-artifact@v4
        with:
          name: benchmark-check-run
          path: check_run_id.txt
