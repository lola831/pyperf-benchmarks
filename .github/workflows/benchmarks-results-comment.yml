name: Post Benchmark Results

on:
  workflow_run:
    workflows: ["Run Benchmarks"]
    types: [completed]

jobs:
  post_comment:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    #   issues: write ????
    steps:
      - name: Print event payload
        run: cat $GITHUB_EVENT_PATH

      - name: Download benchmark artifact
        uses: actions/download-artifact@v4
        with:
          name: benchmark-results
          path: .
          repository: ${{ github.repository }}
          run-id: ${{ github.event.workflow_run.id }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Download comment id
        if: github.event.workflow_run.event == 'issue_comment'
        uses: actions/download-artifact@v4
        with:
          name: comment-id
          path: .
          repository: ${{ github.repository }}
          run-id: ${{ github.event.workflow_run.id }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Comment Id
        if: github.event.workflow_run.event == 'issue_comment'
        run: |
          COMMENT_ID=$(cat comment_id.txt)
          echo "COMMENT_ID=$COMMENT_ID" >> $GITHUB_ENV
          echo "Extracted COMMENT_ID: $COMMENT_ID"

      - name: Parse benchmark_info.json
        id: parse_info
        run: |
          PR_NUMBER=$(jq -r '.pr_number' benchmark_info.json)
          BASE_BRANCH=$(jq -r '.base_branch' benchmark_info.json)
          HEAD_BRANCH=$(jq -r '.head_branch' benchmark_info.json)
          echo "PR_NUMBER=$PR_NUMBER" >> $GITHUB_ENV
          echo "BASE_BRANCH=$BASE_BRANCH" >> $GITHUB_ENV
          echo "HEAD_BRANCH=$HEAD_BRANCH" >> $GITHUB_ENV
          echo "Parsed benchmark_info.json:"
          echo "PR_NUMBER=$PR_NUMBER"
          echo "BASE_BRANCH=$BASE_BRANCH"
          echo "HEAD_BRANCH=$HEAD_BRANCH"

      - name: Read benchmark results
        id: read_results
        run: |
          RESULT=$(cat comparison.txt)
          echo "RESULT<<EOF" >> $GITHUB_OUTPUT
          echo "$RESULT" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Post or update benchmark comment
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const result = fs.readFileSync('comparison.txt', 'utf8');
            const prNumber = Number(process.env.PR_NUMBER);
            if (process.env.COMMENT_ID) {
            // Update the existing comment.
            const commentId = Number(process.env.COMMENT_ID);
            const { data: existingComment } = await github.rest.issues.getComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: commentId
            });
            let updatedBody = existingComment.body.replace(/!\[spinner\]\(.*?\)/, "");
            const appendedText = `\n\n✅ Benchmarks have completed. \n\n## Benchmark Comparison\nThe following table compares the benchmarks from **${process.env.BASE_BRANCH}** (target) and **${process.env.HEAD_BRANCH}** (PR branch):\n\n\`\`\`\n${result}\n\`\`\``;
            const newBody = updatedBody + appendedText;
            await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: commentId,
                body: newBody
            });
            } else {
            // Post a new comment if no COMMENT_ID is present.
            await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: prNumber,
                body: `## Benchmark Comparison\nThe following table compares the benchmarks from **${process.env.BASE_BRANCH}** (target) and **${process.env.HEAD_BRANCH}** (PR branch):\n\n\`\`\`\n${result}\n\`\`\`\n\n✅ Benchmarks have completed.`
            });
            }
